// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace dotnet_token_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250720132253_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("IssuerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IssuerUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipientName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipientUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10m,
                            ExpirationDate = new DateTime(2025, 7, 27, 13, 22, 53, 635, DateTimeKind.Utc).AddTicks(8248),
                            IssuedAt = new DateTime(2025, 7, 20, 13, 22, 53, 635, DateTimeKind.Utc).AddTicks(8144),
                            IssuerId = 2,
                            IssuerUsername = "alice",
                            RecipientId = 3,
                            RecipientName = "Bob Johnson",
                            RecipientUsername = "bob",
                            Remarks = "Test token",
                            Status = "pending"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Name = "Administrator",
                            PasswordHash = "$2a$11$hpBmz45nJ7LD14XfqzBQ2uIEIVEUYoHDwR3jTC4h9K9gCRhV7Wk9y",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "alice@example.com",
                            Name = "Alice Smith",
                            PasswordHash = "$2a$11$4uveJRhnaCu3lqkIjT/uruH3lQWg4CNKb4cvjUEVEM1nVfduPf/JG",
                            Role = "user",
                            Username = "alice"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob@example.com",
                            Name = "Bob Johnson",
                            PasswordHash = "$2a$11$q7ingtuqvm8DtQ/hHqbzPeXp66nDNx4V4AlNuVyDGJNAIwnkB.Nf.",
                            Role = "user",
                            Username = "bob"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
