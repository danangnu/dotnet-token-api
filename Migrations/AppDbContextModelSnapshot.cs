// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace dotnet_token_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IssuerId")
                        .HasColumnType("int");

                    b.Property<string>("IssuerUsername")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .HasColumnType("longtext");

                    b.Property<string>("RecipientUsername")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10m,
                            ExpirationDate = new DateTime(2025, 7, 30, 3, 7, 59, 802, DateTimeKind.Utc).AddTicks(470),
                            IssuedAt = new DateTime(2025, 7, 23, 3, 7, 59, 802, DateTimeKind.Utc).AddTicks(470),
                            IssuerId = 2,
                            IssuerUsername = "alice",
                            RecipientId = 3,
                            RecipientName = "Bob Johnson",
                            RecipientUsername = "bob",
                            Remarks = "Test token",
                            Status = "pending"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Name = "Administrator",
                            PasswordHash = "$2a$11$glMoeqL9WBt99Scri69JGuNEBtqV6pfK.dT21LnSmn/lomIweJw8a",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "alice@example.com",
                            Name = "Alice Smith",
                            PasswordHash = "$2a$11$wOlW13eeR2RaJ1i77GwYW.YWCQZb7dqsCA2KaZOVV2NkX4Kc3yk9e",
                            Role = "user",
                            Username = "alice"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob@example.com",
                            Name = "Bob Johnson",
                            PasswordHash = "$2a$11$Gedl95IBx9ZqEFl5z3tkRe5NtplE8B.u2wXeN/9DUn.NH66kG3lTm",
                            Role = "user",
                            Username = "bob"
                        });
                });

            modelBuilder.Entity("dotnet_token_api.Models.Debt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FromUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSettled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ToUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Debts");
                });
#pragma warning restore 612, 618
        }
    }
}
